name: 定时爬取WMS数据

on:
  schedule:
    - cron: '*/30 * * * *'  # 每30分钟运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    # 添加权限配置
    permissions:
      contents: write  # 给予写入仓库内容的权限
    
    env:
      WMS_URL: ${{ secrets.WMS_URL }}
      WMS_USERNAME: ${{ secrets.WMS_USERNAME }}
      WMS_PASSWORD: ${{ secrets.WMS_PASSWORD }}
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
      
      - name: 设置Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: 安装依赖
        run: |
          pip install -r requirements.txt
      
      - name: 安装Playwright浏览器
        run: |
          python -m playwright install chromium
      
      - name: 运行爬虫脚本
        run: python playwright_scraper.py
      
      - name: 配置Git
        run: |
          git config --global user.name "GitHub Action Bot"
          git config --global user.email "action@github.com"
      
      - name: 提交更新的数据
        run: |
          # 确保data.json文件存在
          if [ ! -f data.json ]; then
            echo '{"last_updated": "", "data": []}' > data.json
            echo "创建了空的data.json文件"
          fi
          
          # 添加并提交文件
          git add data.json
          git commit -m "自动更新WMS数据 $(date +'%Y-%m-%d %H:%M:%S')" || echo "没有新的变更"
          
          # 使用GITHUB_TOKEN进行推送
          git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" HEAD:${GITHUB_REF#refs/heads/}